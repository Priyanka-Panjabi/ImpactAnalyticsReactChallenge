[{"C:\\Users\\Priyanka Panjabi\\Documents\\ui-impact-analytics-task\\src\\index.js":"1","C:\\Users\\Priyanka Panjabi\\Documents\\ui-impact-analytics-task\\src\\reportWebVitals.js":"2","C:\\Users\\Priyanka Panjabi\\Documents\\ui-impact-analytics-task\\src\\components\\App.js":"3","C:\\Users\\Priyanka Panjabi\\Documents\\ui-impact-analytics-task\\src\\components\\HomePage.js":"4","C:\\Users\\Priyanka Panjabi\\Documents\\ui-impact-analytics-task\\src\\components\\partials\\MainDrawer.js":"5","C:\\Users\\Priyanka Panjabi\\Documents\\ui-impact-analytics-task\\src\\redux\\actions\\action.js":"6","C:\\Users\\Priyanka Panjabi\\Documents\\ui-impact-analytics-task\\src\\redux\\actions\\types.js":"7","C:\\Users\\Priyanka Panjabi\\Documents\\ui-impact-analytics-task\\src\\redux\\store.js":"8","C:\\Users\\Priyanka Panjabi\\Documents\\ui-impact-analytics-task\\src\\redux\\reducers\\CombinedReducer.js":"9","C:\\Users\\Priyanka Panjabi\\Documents\\ui-impact-analytics-task\\src\\redux\\reducers\\reducer.js":"10","C:\\Users\\Priyanka Panjabi\\Documents\\ui-impact-analytics-task\\src\\components\\CandidateDetails.js":"11","C:\\Users\\Priyanka Panjabi\\Documents\\ui-impact-analytics-task\\src\\components\\ShortListedCandidates.js":"12","C:\\Users\\Priyanka Panjabi\\Documents\\ui-impact-analytics-task\\src\\components\\shared\\ShortRejectList.js":"13","C:\\Users\\Priyanka Panjabi\\Documents\\ui-impact-analytics-task\\src\\components\\RejectedListCandidate.js":"14"},{"size":610,"mtime":1610182011981,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":898,"mtime":1610205182684,"results":"18","hashOfConfig":"16"},{"size":5139,"mtime":1610294181713,"results":"19","hashOfConfig":"16"},{"size":6190,"mtime":1610293238873,"results":"20","hashOfConfig":"16"},{"size":678,"mtime":1610201030409,"results":"21","hashOfConfig":"16"},{"size":173,"mtime":1610197890121,"results":"22","hashOfConfig":"16"},{"size":355,"mtime":1610182033999,"results":"23","hashOfConfig":"16"},{"size":143,"mtime":1610181863557,"results":"24","hashOfConfig":"16"},{"size":934,"mtime":1610201364793,"results":"25","hashOfConfig":"16"},{"size":9302,"mtime":1610203973521,"results":"26","hashOfConfig":"16"},{"size":598,"mtime":1610205318888,"results":"27","hashOfConfig":"16"},{"size":2490,"mtime":1610204989856,"results":"28","hashOfConfig":"16"},{"size":587,"mtime":1610205272743,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"y5939b",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},"C:\\Users\\Priyanka Panjabi\\Documents\\ui-impact-analytics-task\\src\\index.js",[],["63","64"],"C:\\Users\\Priyanka Panjabi\\Documents\\ui-impact-analytics-task\\src\\reportWebVitals.js",[],"C:\\Users\\Priyanka Panjabi\\Documents\\ui-impact-analytics-task\\src\\components\\App.js",[],"C:\\Users\\Priyanka Panjabi\\Documents\\ui-impact-analytics-task\\src\\components\\HomePage.js",[],"C:\\Users\\Priyanka Panjabi\\Documents\\ui-impact-analytics-task\\src\\components\\partials\\MainDrawer.js",["65"],"C:\\Users\\Priyanka Panjabi\\Documents\\ui-impact-analytics-task\\src\\redux\\actions\\action.js",[],"C:\\Users\\Priyanka Panjabi\\Documents\\ui-impact-analytics-task\\src\\redux\\actions\\types.js",[],"C:\\Users\\Priyanka Panjabi\\Documents\\ui-impact-analytics-task\\src\\redux\\store.js",[],"C:\\Users\\Priyanka Panjabi\\Documents\\ui-impact-analytics-task\\src\\redux\\reducers\\CombinedReducer.js",[],"C:\\Users\\Priyanka Panjabi\\Documents\\ui-impact-analytics-task\\src\\redux\\reducers\\reducer.js",[],"C:\\Users\\Priyanka Panjabi\\Documents\\ui-impact-analytics-task\\src\\components\\CandidateDetails.js",["66","67","68","69","70","71"],"import React, { Component } from 'react';\r\nimport MainDrawer from './partials/MainDrawer' ;\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {connect} from 'react-redux';\r\nimport { Paper, Typography, IconButton, Button, Grid, Avatar, ListItemText , List} from '@material-ui/core';\r\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport {setShortListedCandidate, setRejectedCandidates} from '../redux/actions/action';\r\n\r\nconst useStyles = ()=>({\r\n    mainDiv :{\r\n        display : 'flex',\r\n        flexDirection : 'row',\r\n    },\r\n    imgDiv : {\r\n        display :'flex',\r\n        flexDirection :'row',\r\n        width :'fit-content'\r\n    },\r\n    imgCss : {\r\n        maxHeight :'50%'\r\n    },\r\n    detailDiv: {\r\n        marginTop : '5%',\r\n        marginLeft :'2%'\r\n    },\r\n    Avatar : {\r\n        height:'96%',\r\n        width :'62%'\r\n    },\r\n    TypographyPri : {\r\n        marginLeft:'1%',\r\n        fontSize:'45px'\r\n    },\r\n    TypographySec : {\r\n        marginLeft:'1%',\r\n        fontSize:'18px'\r\n    }\r\n});\r\n\r\nexport class CandidateDetails extends Component {\r\n    state ={\r\n        candidateVal : {},\r\n        candInd : -1\r\n    }\r\n    componentDidMount () {\r\n        let candidateId = window.location.hash.substring(2);\r\n        let ind = this.props.candidates.findIndex(ele=>ele.id===candidateId);\r\n        this.setState({candidateVal : this.props.candidates[ind], candInd: ind}) ;\r\n    }\r\n    acceptRejectCandidate = (val) =>{\r\n        const {candidateVal, candInd} = this.state ;\r\n        const {candidates, shortlisted, rejected} = this.props ;\r\n        let obj = candidateVal ;\r\n        let candiArr = [] ;\r\n        switch (val){\r\n            case 'accept' : {\r\n                            candiArr = [...shortlisted] ;\r\n                            candiArr.push(obj );\r\n                            this.props.setShortListedCandidate(candiArr);}\r\n                            break;\r\n            default : {\r\n                            candiArr = [...rejected] ;\r\n                            candiArr.push(obj );\r\n                            this.props.setRejectedCandidates(candiArr);} \r\n                            break ;\r\n        }\r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const { classes} =this.props ;\r\n        const {candidateVal} = this.state ;\r\n        return (\r\n            <MainDrawer>\r\n                <Grid container spacing ={2} style ={{margin:'3%', backgroundColor:'aliceblue'}}>\r\n                    <Grid container item xs ={12} sm={12} md={3} lg ={3} >\r\n                        <Grid item xs ={12} sm={12} md ={12} lg ={12}> \r\n                            <Avatar alt=\"image\" src={candidateVal.Image} className={classes.Avatar} />\r\n                        </Grid>\r\n                        <Grid ititem xs ={12} sm={12} md ={12} lg ={12}>\r\n                            <Typography className={classes.TypographyPri}>\r\n                            {candidateVal.name}\r\n                            </Typography>\r\n                            <Typography className={classes.TypographySec}>\r\n                            User Id -{candidateVal.id}\r\n                            </Typography>\r\n                            \r\n                        </Grid>\r\n                        <Grid item xs ={12} sm={12} md ={12} lg ={12}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            style={{width:'98%', backgroundColor:'#48BB78'}}\r\n                            endIcon={<DoneOutlineIcon>Accepted</DoneOutlineIcon>}\r\n                            onClick = {()=>this.acceptRejectCandidate('accept')}\r\n                        >\r\n                            Accept\r\n                        </Button>\r\n                            \r\n                        </Grid>\r\n                        <Grid item xs ={12} sm={12} md ={12} lg ={12}>\r\n                        <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{width:'98%', marginTop:'2%', backgroundColor:'#E53E3E'}}\r\n                        endIcon={<ClearIcon>Accepted</ClearIcon>}\r\n                        onClick = {()=>this.acceptRejectCandidate('reject')}\r\n                        >\r\n                        Reject\r\n                    </Button>\r\n                            \r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                    <Grid container item xs ={12} sm={12} md={8} lg ={8}>\r\n                        <Grid xs ={12} sm={12} md = {12} lg ={12}>\r\n                           <List>\r\n                               <ListItemText\r\n                                primary= {\"Years of Experience\"}\r\n                               secondary={\r\n                                <React.Fragment>\r\n                                <Typography\r\n                                    component=\"span\"\r\n                                    variant=\"body2\"\r\n                                    className={classes.inline}\r\n                                    color=\"textPrimary\"\r\n                                >\r\n                                   - 10   \r\n                                </Typography>\r\n                                </React.Fragment>}\r\n                                />\r\n                                <ListItemText\r\n                                primary= {\"Previous Company\"}\r\n                               secondary={\r\n                                <React.Fragment>\r\n                                <Typography\r\n                                    component=\"span\"\r\n                                    variant=\"body2\"\r\n                                    className={classes.inline}\r\n                                    color=\"textPrimary\"\r\n                                >\r\n                                   - XYZ Pvt. Ltd.\r\n                                </Typography>\r\n                                </React.Fragment>}\r\n                                />\r\n                                 <ListItemText\r\n                                primary= {\"Summary\"}\r\n                                secondary={\r\n                                <React.Fragment>\r\n                                <Typography\r\n                                    component=\"span\"\r\n                                    variant=\"body2\"\r\n                                    className={classes.inline}\r\n                                    color=\"textPrimary\"\r\n                                >\r\n                                   - Professional marketer manager with 5+ years of experience in digital marketing. Social media marketing experience, including Facebook, Google, and LinkedIn advertising. Experience in managing an account with a monthly budget of $30,000. B.A. in marketing management.\r\n                                </Typography>\r\n                                </React.Fragment>}\r\n                                />\r\n                           \r\n                           </List>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n\r\n                {/* <div className = {classes.mainDiv}>\r\n                    <div className ={classes.imgDiv} >\r\n                        <div>\r\n                            <img src={candidateVal.Image}  className ={classes.imgCss}/>\r\n                        </div>\r\n                        <div className = {classes.detailDiv}>\r\n                            <Typography style={{fontSize : '38px'}}>\r\n                                <b>{candidateVal.name}</b> \r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <Paper>\r\n                        <Typography>\r\n                            <b>About Candidate</b> \r\n                        </Typography>\r\n                        </Paper>\r\n                    </div>\r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            endIcon={<DoneOutlineIcon>Accepted</DoneOutlineIcon>}\r\n                            onClick = {()=>this.acceptRejectCandidate('accept')}\r\n                        >\r\n                            Accept\r\n                        </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        endIcon={<ClearIcon>Accepted</ClearIcon>}\r\n                        onClick = {()=>this.acceptRejectCandidate('reject')}\r\n                    >\r\n                        Reject\r\n                    </Button>\r\n                    </div>\r\n\r\n                </div> */}\r\n            </MainDrawer>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps =(state)=>{\r\n    return {\r\n        candidates : state.ReducerData.candidates,\r\n        shortlisted : state.ReducerData.shortlisted,\r\n        rejected :  state.ReducerData.rejected\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{setShortListedCandidate, setRejectedCandidates})(withStyles(useStyles)(CandidateDetails));\r\n","C:\\Users\\Priyanka Panjabi\\Documents\\ui-impact-analytics-task\\src\\components\\ShortListedCandidates.js",["72"],"import React from 'react';\r\nimport MainDrawer from './partials/MainDrawer';\r\nimport {connect} from 'react-redux';\r\nimport ShortRejectList from './shared/ShortRejectList';\r\nclass ShortListedCandidates extends React.Component {\r\nrender (){\r\n  const {classes, shortlisted} = this.props;\r\n  return (\r\n    <MainDrawer>\r\n        <ShortRejectList candiArr ={shortlisted} status ={\"shortlisted\"}/>\r\n    </MainDrawer>\r\n  );\r\n}\r\n}\r\nconst mapStateToProps =(state)=>{\r\n    return {\r\n        shortlisted : state.ReducerData.shortlisted,\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(ShortListedCandidates);","C:\\Users\\Priyanka Panjabi\\Documents\\ui-impact-analytics-task\\src\\components\\shared\\ShortRejectList.js",["73"],"import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {Typography, Avatar, ListItemAvatar, ListItemText, Divider, ListItem, List, Grid} from '@material-ui/core';\r\nimport {connect} from 'react-redux';\r\n\r\nconst useStyles = (theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: '100ch',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n});\r\nclass ShortRejectList extends Component {\r\n    render() {\r\n        const {classes, candiArr, status} = this.props ;\r\n        return (\r\n            <Grid container>\r\n            <Grid item xs={0} sm ={0} md={3} lg ={3} >\r\n                \r\n            </Grid>\r\n            <Grid container item xs ={12} sm ={12} md= {8} lg ={8} >\r\n            <Grid item xs={12} sm={12} lg ={12} >\r\n                <Typography style={{fontSize : '20px',marginLeft : '23%'}}>\r\n                {status.toUpperCase()} CANDIDATES\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs ={12} sm={12} md={12} lg ={12}>\r\n            <List className={classes.root}>\r\n            {candiArr.length>0 && candiArr.map(ele=>{return <><ListItem alignItems=\"flex-start\">\r\n                <ListItemAvatar>\r\n                <Avatar alt=\"image\" src={ele.Image} />\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                primary={ele.name}\r\n                secondary={\r\n                    <React.Fragment>\r\n                    <Typography\r\n                        component=\"span\"\r\n                        variant=\"body2\"\r\n                        className={classes.inline}\r\n                        color=\"textPrimary\"\r\n                    >\r\n                        User Id  \r\n                    </Typography>\r\n                    {` - ${ele.id}`}\r\n                    <br>\r\n                    </br> \r\n                    <Typography\r\n                        component=\"span\"\r\n                        variant=\"body2\"\r\n                        className={classes.inline}\r\n                        color=\"textPrimary\"\r\n                    >\r\n                        Status \r\n                    </Typography>\r\n                    {` - ${status}`}\r\n                    </React.Fragment>\r\n                }\r\n                />\r\n            </ListItem>\r\n            <Divider/>\r\n    </>})\r\n    }\r\n    </List>\r\n    </Grid>\r\n    </Grid>\r\n    </Grid>\r\n        )\r\n    }\r\n}\r\nexport default ((withStyles)(useStyles)(ShortRejectList));\r\n","C:\\Users\\Priyanka Panjabi\\Documents\\ui-impact-analytics-task\\src\\components\\RejectedListCandidate.js",["74"],"import React from 'react';\r\nimport MainDrawer from './partials/MainDrawer';\r\nimport {connect} from 'react-redux';\r\nimport ShortRejectList from './shared/ShortRejectList';\r\n\r\nclass RejectedListCandidates extends React.Component {\r\nrender (){\r\n  const {classes, rejected} = this.props;\r\n  return (\r\n    <MainDrawer>\r\n        <ShortRejectList candiArr ={rejected} status ={\"rejected\"}/>\r\n    </MainDrawer>\r\n  );\r\n}\r\n}\r\nconst mapStateToProps =(state)=>{\r\n    return {\r\n        rejected : state.ReducerData.rejected,\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(RejectedListCandidates);",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":133,"column":11,"nodeType":"81","messageId":"82","endLine":133,"endColumn":18},{"ruleId":"79","severity":1,"message":"83","line":5,"column":10,"nodeType":"81","messageId":"82","endLine":5,"endColumn":15},{"ruleId":"79","severity":1,"message":"84","line":5,"column":29,"nodeType":"81","messageId":"82","endLine":5,"endColumn":39},{"ruleId":"79","severity":1,"message":"85","line":52,"column":30,"nodeType":"81","messageId":"82","endLine":52,"endColumn":37},{"ruleId":"79","severity":1,"message":"86","line":53,"column":16,"nodeType":"81","messageId":"82","endLine":53,"endColumn":26},{"ruleId":"87","severity":1,"message":"88","line":57,"column":29,"nodeType":"89","messageId":"90","endLine":60,"endColumn":75},{"ruleId":"87","severity":1,"message":"88","line":62,"column":23,"nodeType":"89","messageId":"90","endLine":65,"endColumn":73},{"ruleId":"79","severity":1,"message":"91","line":7,"column":10,"nodeType":"81","messageId":"82","endLine":7,"endColumn":17},{"ruleId":"79","severity":1,"message":"92","line":4,"column":9,"nodeType":"81","messageId":"82","endLine":4,"endColumn":16},{"ruleId":"79","severity":1,"message":"91","line":8,"column":10,"nodeType":"81","messageId":"82","endLine":8,"endColumn":17},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'display' is assigned a value but never used.","Identifier","unusedVar","'Paper' is defined but never used.","'IconButton' is defined but never used.","'candInd' is assigned a value but never used.","'candidates' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'classes' is assigned a value but never used.","'connect' is defined but never used.","no-global-assign","no-unsafe-negation"]